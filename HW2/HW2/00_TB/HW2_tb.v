`timescale 1ns/10ps
`define CYCLE 10.0
`define HCYCLE (`CYCLE/2)
`define MAX_CYCLE 10000
`define PAT_NUM 20

`ifdef I0
    `define INPUT_A "../00_TB/pattern/I0/i_A.dat"
	`define INPUT_B "../00_TB/pattern/I0/i_B.dat"
	`define GOLDEN  "../00_TB/pattern/I0/golden.dat"
    `define INST 0
`elsif I1
    `define INPUT_A "../00_TB/pattern/I1/i_A.dat"
	`define INPUT_B "../00_TB/pattern/I1/i_B.dat"
	`define GOLDEN  "../00_TB/pattern/I1/golden.dat"
    `define INST 1
`elsif I2
    `define INPUT_A "../00_TB/pattern/I2/i_A.dat"
	`define INPUT_B "../00_TB/pattern/I2/i_B.dat"
	`define GOLDEN  "../00_TB/pattern/I2/golden.dat"
    `define INST 2
`elsif I3
    `define INPUT_A "../00_TB/pattern/I3/i_A.dat"
	`define INPUT_B "../00_TB/pattern/I3/i_B.dat"
	`define GOLDEN  "../00_TB/pattern/I3/golden.dat"
    `define INST 3
`elsif I4
    `define INPUT_A "../00_TB/pattern/I4/i_A.dat"
	`define INPUT_B "../00_TB/pattern/I4/i_B.dat"
	`define GOLDEN  "../00_TB/pattern/I4/golden.dat"
    `define INST 4
`elsif I5
    `define INPUT_A "../00_TB/pattern/I5/i_A.dat"
	`define INPUT_B "../00_TB/pattern/I5/i_B.dat"
	`define GOLDEN  "../00_TB/pattern/I5/golden.dat"
    `define INST 5
`elsif I6
    `define INPUT_A "../00_TB/pattern/I6/i_A.dat"
	`define INPUT_B "../00_TB/pattern/I6/i_B.dat"
	`define GOLDEN  "../00_TB/pattern/I6/golden.dat"
    `define INST 6
`elsif I7
    `define INPUT_A "../00_TB/pattern/I7/i_A.dat"
	`define INPUT_B "../00_TB/pattern/I7/i_B.dat"
	`define GOLDEN  "../00_TB/pattern/I7/golden.dat"
    `define INST 7
`else
    `define INPUT_A "../00_TB/pattern/I0/i_A.dat"
	`define INPUT_B "../00_TB/pattern/I0/i_B.dat"
	`define GOLDEN  "../00_TB/pattern/I0/golden.dat"
    `define INST 0
`endif

module test_HW2();
    reg         clk, rst_n;
    reg  [31:0] A, B, test_inA, test_inB;
    wire [63:0] alu_out;
    reg [63:0]test_ans;
    reg         valid;
    reg  [2:0]  inst, test_inst;
    wire        done;
    reg  [31:0] in_a[0:`PAT_NUM - 1], in_b[0:`PAT_NUM - 1];
    reg  [63:0] golden[0:`PAT_NUM - 1];
    reg next;
    reg [31:0]   done_cnt;

    integer cyc;
    integer i, j, err, delay_num, err_mul, err_div, err_and, err_or;

    initial begin
        $readmemb(`INPUT_A, in_a);
        $readmemb(`INPUT_B, in_b);
        $readmemb(`GOLDEN, golden);
    end

    ALU U0( 
        .i_clk(clk),
        .i_rst_n(rst_n),
        .i_valid(valid),
        .i_A(A),
        .i_B(B),
        .i_inst(inst),
        .o_data(alu_out),
        .o_done(done)
    );

    // Clock waveform definition
        initial clk = 1;
        always #(`HCYCLE) clk = ~clk;

        initial cyc = 0;
        always @(posedge clk) begin
            cyc = cyc + 1;
            if(cyc == `MAX_CYCLE) begin
                $display("---------------------------------------------------");
                $display("- the runtime of your design is over %d cycles !! -", cyc);
                $display("---------------------------------------------------");
                $finish;
            end
        end


    // Write out waveform
        initial begin
            $fsdbDumpfile("HW2.fsdb");
            $fsdbDumpvars(0, "+mda");
        end

    // Stimuli and check
        // reset
            initial begin
                rst_n = 1;
                #(`CYCLE * 1.25);    rst_n = 0;
                #(`CYCLE * 1);      rst_n = 1;
            end

        // input
            initial begin
                valid = 0;
                A = 0;
                B = 0;
                i = 0;
                inst = 0;
                next = 1;

                #(`CYCLE * 3);

                while (i < `PAT_NUM) begin
                    @(negedge clk)
                    if(next) begin
                        valid = 1;
                        A = in_a[i];
                        B = in_b[i];
                        inst = `INST;
                        i = i + 1;
                        next = 0;
                        #(`CYCLE);  valid = 0;
                    end
                end
            end

        // output check
            initial begin
                j = 0;
                err = 0;
                while (j < `PAT_NUM) begin
                    @(posedge valid);

                    if (inst < 6) begin
                        repeat(2) @(negedge clk);
                    end
                    else begin
                        repeat(33) @(negedge clk);
                    end

                    if(done) begin
                        test_inA = in_a[j];
                        test_inB = in_b[j];
                        inst = `INST;
                        test_ans = golden[j];
                        
                        if (done_cnt > j) begin
                            $display ("Test[%d]: Error! Too much output done signal!!", j);
                            err = err + 1;
                        end
                        else if(test_ans != alu_out) begin
                            $display (
                                "Test[%d]: Error! Inst=%h, A=%h, B=%h, Golden=%h, Yours=%h", 
                                j, inst, test_inA, test_inB, test_ans, alu_out
                            );
                            err = err + 1;
                        end
                        j = j + 1;
                        #(`CYCLE); next = 1;
                    end
                    else begin
                        $display ("Test[%d]: Error Output miss done signal !!", j);
                        err = err + 1;
                        j = j + 1;
                        #(`CYCLE); next = 1;
                    end
                end

                $display("Pattern: ", `INST);
                ALLPASS();
                # ( 2 * `CYCLE);
                $finish;
            end

    // done counter

    always @(negedge clk or negedge rst_n) begin
        if (!rst_n) begin
            done_cnt <= 0;
        end
        else begin
            if (done) begin
                done_cnt <= done_cnt+1;
            end
            else begin
                done_cnt <= done_cnt;
            end
        end
    end

    // ALLPASS pattern
        task ALLPASS();
            if (err == 0) begin
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░▒█▓░░░░░░░░░░░░░▓█▒░░░░░░░░░░░░░░░░░░▒▓▓░░░░░░░░░░░░░░░▓▓░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;92m░░░▒▒▒▒▒▒▒▒███▒▒▒▒▒░░░▒▒▒▒▒██▓▒▒▒▒▒▒▒░░░░░░░░░░░▓██░░░░░░░░░░░░░░▒██░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;92m░░░▓███████████████░░▒███████████████░░░░░░░░░░░▓██░░░░░░░░░░░░░░▒██░░░░▒▓▒░░░░░░░░▓██▓░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░▓██░░░░░░░░░░░░░██▒░░░░░░░░░░░░░░░░░░▓██▒░░░░░░░▒▒▒▒▓▓█████████▓▒░░░░░░░▓██▓░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░█████████████▒░░██▓▓▓▓▓██▒░░░░░░░░░░░░░░▓██▓░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░▓███████████████████▒░░░░░░░░░░░░░██░░░▒█▓░░░▓█▒░░░░░░░░▒██░░░░░░░░░░░░░░░▓██▒░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░▒▓███▓░░░░░░░░░░░░░░░░██░░░▒█▓░░░▓█▒░░░░░░░░▒██░░░░░░░░░░░░░░░▒██▒░░░\033[0m");
                $display("\033[1;92m░░░░▒▓▓▓▓▓▓▓▓▓█▓░░░████▒░░░░░░▓██▒░░░░░░░░░██░░░▒█▓░░░▓█▒░▒▒▒▒▒▒▒▓██▓▒▒▒▒▒▒▒░░░░░░░▒██▒░░░\033[0m");
                $display("\033[1;92m░░░░░▒▒▒▒▒▒▒▓██▓░░░█████▒░░▒▓██▓░░░░░░░░░░░██░░░▒█▓░░░▓█▒░▒▓▓▓▓▓▓████▓▓▓▓▓▓▒░░░░░░░▒██▒░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░▓██▒░░░░██▒░▓████▓░░░░░░░░░░░░░░██▒▒▒▓██▒▒▒██▒░░░░░░░░▒██░░░░░░░░░░░░░░░▒██░░░░\033[0m");
                $display("\033[1;92m░░░░░░░░▒▓██▓░░░░░░██▒░░░▒▓██▓▓▒░░░░░░░░░░░███▓▓███▓▓▓▓▓▒░░░░░░░░▒██░░░░░░░░░░░░░░░▒██░░░░\033[0m");
                $display("\033[1;92m░░░░▒▓███▓▒░░░░██████▒░░░░░░▒▓████▓▓▒░░░░░░▓▓░░░▓█▓░░░░░░░░░░░░░░▓██▒░░░░░░░░░░░░░░▒██░░░░\033[0m");
                $display("\033[1;92m░░░▒█▓▓▒░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░▒▓▓░░░░░░░░░░░░▓█▓░░▒██░████████████████████░░░░░░░░░░░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░▓█████████████████████░░░░░░░░░░░░░░░░░▓█▓░░░▓█▓░░░░░░░░▒██▒░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;92m░░░░░░░░▒░░░░░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░▓██▒▒▓▓██▒░░░░░░░▒██░░░░░░░░░░░░░░░▓██▓░░░\033[0m");
                $display("\033[1;92m░░░░░░▒██▓░░░░██▓░░░░░▒██▒░░░░▒███▒░░░░░░▒███████████▓▓▓█▓░░░░░░░▒██░░░░░░░░░░░░░░▒████▒░░\033[0m");
                $display("\033[1;92m░░░░▒███▒░░░░░▒██░░░░░░▒██▒░░░░░▒███▒░░░░░▓▒▒▒▒░░░░░░░░░██░░░░░░░▒██░░░░░░░░░░░░░░░▒▓▓▒░░░\033[0m");
                $display("\033[1;92m░░░▒██▓░░░░░░░░██▒░░░░░░▒▓▓░░░░░░░▒█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒██░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▓██▓▓▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓██▓▒▒░▒▒▒▓▓▓██████████▓▓▓▓▒░░░░░░░░░░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██▓▒░▒▓▒░░░▓█▓▓▒░▒███▓▓▓▓▓▓██████▓▒░░░░░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒███▒░░▒▓██▓▓▒▒▒▒░░░░▒███▓▓▓▓▓▒▒▒▓▓████▒░░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓█████▒░░██▒▒▒▒▓▓██████▒▒███████████▓▓▓▓███░░░\033[0m");
                $display("\033[1;92m░░░▒▒▓▓████████████▓▓▒▒░░░░░░░░░░░░░░░░░░░▒██▓▒▓███▒░░▒▓███▓▓▓▓▒▒▒░░▒██▓███▓▓▓▓▓████▒███░░\033[0m");
                $display("\033[1;92m█████▓▓▒▒▒▒▒▒▒▒▒▒▒▒▓▓█████▓▒░░░░░░░░░░░░░████▒███▓▓█▓▒░░░░▒▒▒▓▓▓▓▒▒▓█▓░░░▒▒█████▓▒▓▓▒▓███▒\033[0m");
                $display("\033[1;92m▓▒░░░░░░░░░░░░░░░░░░░░░░▒▓███▓░░░░░░░░░░█████▓▒▓█▓░▒▓██▓▓▒▒▒▒▓▓███▓▒░░░░░░░░░░▒▓█▓▒▒▓██▓██\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓███▒░░░░░░░██▒▒▓██████▓▒░░▒▓▓▓▓████▓▒▒▒▒░░░░░░░░▒▓██▓▓███▒▓██\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓██▓░░░░░░▓███▓▒▓▓██████▓▓▒▒▒▒▒▒▒▓████████████████████▓▒▓███\033[0m");
                $display("\033[1;92m░░░░░░░░▒▓▓░░▒██▒░░░░░░░░░░░░░░░███░░░░░▓██▓███▓▓▓▒▓▓▓█████████████████████████▓▓▓▒▓███▓██\033[0m");
                $display("\033[1;92m░░░░░░░░▓██░░▒▓▓░░░░░░░░░░░░░░░░░▓██░░░░▓██▒▒▓▓██████▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓█████▓▓▒▒██\033[0m");
                $display("\033[1;92m░░░░░░░░░▓░░░░▓▒░░░░░░░░░░░░░░░░░░███░░░▒██▒▒▒▒▒▒▒▒▓▓██████████████▓▓██████████▓▓▓▒▒▒▒▒▒██\033[0m");
                $display("\033[1;92m░░░░░░░░████████░░░░░░░░░░░░░░░░░░░██▒░░░██▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██\033[0m");
                $display("\033[1;92m░░░░░░░░▓▒░░░░▓▓░░░░░░░░░░░░░░░░░░░██▒░░░██▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██▓\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██▒░░░░▒███▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓███▒░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██▒░░░░░▒████████▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓█████▓▒░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓██░░▒▓█████▓▒▒▒▓▓██████████████▓▓███████████▓▓▒▒░░░░░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒████████▓▒░░░░░░░░▒████▓▒▓▓▓▓▓▓██▓▓▓▓▒▒▒▒░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░████▓▒░░░░░░░░░▒▓███▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒░░░░░░░░░▒▓████▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓████▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;92m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓████▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;92m------------------------------------------------------------------------------------------\033[0m");
                $display("\033[1;92m-                        Successful!! You passed the simulation                          -\033[0m");
                $display("\033[1;92m------------------------------------------------------------------------------------------\033[0m\n");
            end
            else begin
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░▓▒░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░▓██▒░░░░░░░░░░░░░░░▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░▓████▒░░░░░░░░░░▒████████▓▒░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▓██▓▒▒▒░░░░░▓██░░██▓░░░░░░░░░█▓▒░░░░▒███▒░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░▓█▓▒▒██▒▒▓█▒░░▒██▓░░░░▒██▓░░░░░░░░░░░░░░░░███░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░▓█░░░█▓░░▒█▒▒███▒▒▒▒▒▒▒▒████▒░░░░░░░░░░░░▓██▒░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░▓█░░░█▓░░▒█▓█▓▒██████████░▒▓▒░░░░░░░░░░░▓██▒░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░▓█░░░█▓░░▒█▒░░░░░░░░░░░░░░░░░░░░░░░░░░▒██▓░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░▓██████████▒░░░░░░░░░░░░░░░░░░░░░░░░░▓██▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░▓█▒░▒██░░░░░░░█████████████░░░░░░░░░▒██▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░██░░▓▓░░░█▓░░░░░░░░▓█▓░░░░░░░░░░▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░██░░▓█▓░░█▓░░░░░░░░▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░▒██▒▒▓██░░█▓░░░░░░░░▓█▓░░░░░░░░░▒▓▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░▓█████▓▓▓▓▒▓█▓░██▒▒▒▒▒▒▒▒██▓░░░░░░░░░████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██▓▓▓▓▓▓▓▓██▓░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓▓██████▓░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓███▓▓▒▒░░░▒█▓░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓██▓▒░░░░░░█▒░░▓█▒░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒██▓▒░░░▒█▓░░░▓█░░▒██░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░▒▓█████████████████▓▓▒░░░░░░░░░░░░░░░░░░░░░▓█▒░░▓▓░░▓█▓░░▒██▒░░██▒░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m██▓▒▒░░░░░░░░░░░░░░▒▒▓███▓░░░░░░░░░░░░░░░░▒█▓░░▓█▓▒▓██▒░░▒█▓░░░▓█▓▓▓███▓░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░▒███▒░░░░░░░░░░░░▒█▓░░░▒▒▓██▒░░▒██▒░░░██████▓▒▒▓█▓░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░░▓██▒░░░░░░░░░░██▒░░▒▓▓▒▒░▒▓█▓▒░░░▒██▒░░░░▒██░▒██▒░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░██▒░▒██░░░░░░░░░░░░░░██▓░░░░░░░░░██▒░░░░░▒▒██▓▒░░░▒██▓░░░░░░▒██▒░▒█▓░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░▓▓░░░▓▒░░░░░░░░░░░░░░░▓█▓░░░░░░░░▓█▓░░░░▒▓▓▒░░░▒▓██▓░░░░░▒▓█▓▒▒█░▒█▓░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░█▓▒▒▒█▓░░░░░░░░░░░░░░░░██▒░░░░░░░░▓█▓▒░░░░░▒▒▓██▓▒░░░░░▓▓▓▒▒▒▓█▓▒██░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░▓██▓▓▓██░░░░░░░░░░░░░░░░▒██░░░░░░░░░▒▓███▓███▓██▓▒▒▒▒▓▓▒▒▒▓██▓▒▒██▓░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒██░░░░░░░░░░░▒▓███▓▒▒░▒▓▓▓▓▓▓▓▓▓▒▒▒▒▓██▓░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒█▓░░░░░░▒▓▓████▓▒▒▒▓███▓▓▓▓▓▓▓▓████▓▒░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██▒░░▒▓████▓▓▒░░░░░▒▓███▒▒▒▓▓▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓██▓███▓▒▒░░░░░░▒▓███▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██▓▒▒░░░░░░░▒▓███▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓████▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\033[0m");
                $display("\033[1;31m------------------------------------------------------------------------------------------\033[0m");
                $display("\033[1;31m-                              Wrong!! error count: %d                         -\033[0m", err);
                $display("\033[1;31m-                              Please check your design again :\                         -\033[0m");
                $display("\033[1;31m-----------------------------------------------------------------------------------------\033[0m\n");
            end
        endtask

endmodule